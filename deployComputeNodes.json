{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "uniquePrefix": {
      "type": "string",
      "metadata": {
        "description": "This unique prefix will be used on all the objects created as part of this template."
      }
    },
    "transferVMSize": {
      "type": "string",
      "defaultValue": "Standard_D4",
      "allowedValues": [
        "Standard_A4",
        "Standard_A7",
        "Standard_D4",
        "Standard_D14"
      ],
      "metadata": {
        "description": "Size of the VM used to transfer the VM image to various storage acounts."
      }
    },
    "numberOfSAs": {
      "type": "int",
      "metadata": {
        "description": "Number of Storage Accounts to upload the custom image to."
      }
    },
    "imageLocation": {
      "type": "string",
      "metadata": {
        "description": "URL of the base custom image, in the format of https://accountname.blob.core.windows.net/container/image.vhd."
      }
    },
    "storageAccountKey": {
      "type": "securestring",
      "metadata": {
        "description": "Storage Account key for accessing the base custom image."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username for the VMs in the deployment."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the VMs in the deployment."
      }
    },
    "hpcUserName": {
      "type": "string",
      "defaultValue": "hpc",
      "metadata": {
        "description": "User for running HPC applications with shared home directory and SSH public key authentication setup.  This user cannot login from outside the cluster. Pick a valid username otherwise there will be a BadRequest error."
      }
    },
    "dataDiskSize": {
      "type": "int",
      "defaultValue": 128,
      "metadata": {
        "description": "The size in GB of each data disk that is attached to the VM.  A RAID-0 volume is created with all data disks that is dataDiskSize * dataDiskCount in size."
      }
    }
  },
  "variables": {
    "vnetName": "[concat(parameters('uniquePrefix'), 'vnet')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "subnet",
    "subnetPrefix": "10.0.0.0/21",
    "storageAccountType": "Standard_LRS",
    "location": "[resourceGroup().location]",
    "transferImagePublisher": "OpenLogic",
    "transferImageOffer": "CentOS",
    "transferOSVersion": "7.1",
    "imagePieces": "[split(parameters('imageLocation'),'/')]",
    "blobName": "[variables('imagePieces')[sub(length(variables('imagePieces')),1)]]",

    "templateLocation": "https://raw.githubusercontent.com/grandparoach/Azure-NFS-Server/master/",

    "sharedResourcesTemplateUri ": "[concat(variables('templateLocation'), 'shared-resources.json')]",
    "uploadTemplateUri": "[concat(variables('templateLocation'), 'upload.json')]",

    "downloadTemplateURI": "[concat(variables('templateLocation'), 'download.json')]",
    "downloadScriptURI": "[concat(variables('templateLocation'), 'download.sh')]",
    "uploadTemplateURI": "[concat(variables('templateLocation'), 'upload.json')]",
    "uploadScriptURI": "[concat(variables('templateLocation'), 'upload.sh')]"
  },
  "resources": [
    {
      "name": "[concat(parameters('uniquePrefix'), 'base')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('sharedResourcesTemplateUri ')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "uniquePrefix": { "value": "[parameters('uniquePrefix')]" },
          "numberOfSAs": { "value": "[parameters('numberOfSAs')]" },
          "vnetName": { "value": "[variables('vnetName')]" },
          "addressPrefix": { "value": "[variables('addressPrefix')]" },
          "subnetName": { "value": "[variables('subnetName')]" },
          "subnetPrefix": { "value": "[variables('subnetPrefix')]" },
          "location": { "value": "[variables('location')]" }
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat('transfer', parameters('uniquePrefix'), 'sa')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat('transfer', parameters('uniquePrefix'), 'ip')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat('transfer', parameters('uniquePrefix'), 'nic')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/transfer', parameters('uniquePrefix'), 'ip')]",
        "[concat('Microsoft.Resources/deployments/', parameters('uniquePrefix'), 'base')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat('transfer', parameters('uniquePrefix'), 'ip'))]"
              },
              "subnet": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('vnetName'), '/subnets/', variables('subnetName'))]"
              }
            }
          }
        ]
      }
    },

    
     {
      "name": "[concat(parameters('uniquePrefix'), 'full')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "uploadLoop"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('finalTemplateUri'), parameters('deploymentType'), '.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "uniquePrefix": { "value": "[parameters('uniquePrefix')]" },
          "numberOfSAs": { "value": "[parameters('numberOfSAs')]" },
          "instanceCountPerSA": { "value": "[parameters('instanceCountPerSA')]" },
          "vmSize": { "value": "[parameters('computeVMSize')]" },
          "OSType": { "value": "[parameters('computeOSType')]" },
          "blobName": { "value": "[variables('blobName')]" },
          "vnetName": { "value": "[variables('vnetName')]" },
          "addressPrefix": { "value": "[variables('addressPrefix')]" },
          "subnetName": { "value": "[variables('subnetName')]" },
          "subnetPrefix": { "value": "[variables('subnetPrefix')]" },
          "templateLocation": { "value": "[variables('templateLocation')]" },
          "location": { "value": "[variables('location')]" },
          "masterHostName": { "value": "[concat('transfer', parameters('uniquePrefix'), 'vm')]" },
          "hpcUserName": { "value": "[parameters('hpcUserName')]" },
          "finaldeployScriptURI": { "value": "[variables('finaldeployScriptURI')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" }
        }
      }
    }

      
    }
  ]
}

